{
  "name": "Raspi sensor daemons",
  "tagline": "",
  "body": "# Raspi Sensor Daemons\r\nA set of daemons for reading sensors on a Raspberry PI.\r\n\r\nTested on RaspberryPi 3\r\n\r\nActually sensors supported are:\r\n\r\nAS3935         - Franklin Lightning\r\n\r\nBMP180         - Barometric Pressure\r\n\r\nTX23           - Lacrosse Wind speed and direction\r\n\r\nDHT11 / DHT22  - Temperature and Humidity\r\n\r\nEach executalbe can run as a foreground process or a daemon.\r\n\r\nIf lauched as a foreground process, the software query the sensor for a while and print the values on exit.\r\n\r\nIf launched as a daemon, the same executalbe must be started twice: one for running the dameon and a second time for asking data to the background process.\r\n\r\n-------------------------------\r\n\r\nCompilation\r\n\r\ndo a \"make\" in the main folder to build:\r\n\r\nreadDHT\r\n\r\nreadBMP180\r\n\r\nreadTX23\r\n\r\nreadAS3935\r\n\r\ndo a \"make install\" to install everything on /usr/local/bin\r\n\r\n-------------------------------\r\n\r\nreadDHT manpage\r\n\r\n\r\nNAME\r\n\r\n       readDHT - read values from DHT11 or DHT22 Temperature and Humidity sensor\r\n\r\n\r\nSYNOPSIS\r\n\r\n       readDHT - options\r\n\r\n\r\nDESCRIPTION\r\n\r\n       Read values from DHT sensor connected to Raspberry PI GPIO, and print information on screen in variuos formats. Also can start a background dameon for continuos reading. Daemon instance can be queried from the same executable with the -q parameter.\r\n       Parameter -gpon is useful to recover a bad reading or a critical stop of the sensor. Due to the low consumption, gpon pin can be used to power the sensor.\r\n\r\n       Mandatory arguments to long options are mandatory for short options too.\r\n\r\n\t-v, --verbose\r\n\t\tGive detailed messages\r\n\r\n\t-t,--type\r\n\t\tSpecify DTH type [11 or 22] (default 22)\r\n\r\n\t-gpio, --gpio\r\n\t\tSelect GPIO port (default 22)\r\n\r\n\t-gpon, --gpon\r\n\t\tSelect GPIO port to Power ON of the sensor (default none)\r\n\r\n\t-r [0..10], --retry[0..10]\r\n\t\tRetry counter\r\n\r\n\t-d, --daemonize\r\n\t\tStart daemon with update cycle data refresh\r\n\r\n\t-uc [5..60], --update-cycle [10..60]\r\n\t\tSet update cycle (default 3)\r\n\r\n\t-s [1..255], --samples [1..64]\r\n\t\tSet average samples num(default 1)\r\n\r\n\t-q, --query-daemon\r\n\t\tQuery the daemon\r\n\r\n\t-psa, --print-sampling\r\n\t\tPrint sampling of input pin\r\n\r\n\t-pt, --print-temperature-only\r\n\t\tPrint temperature only\r\n\r\n\t-ph, --print-humidity-only\r\n\t\tPrint humudity only\r\n\r\n\t-pj, --print-json\r\n\t\tJSON output\r\n\r\n\t-?, --help\r\n\t\tShow usage information\r\n\r\nAUTHOR\r\n\r\n       Written by Daniele De Marchi.\r\n\r\n\r\nREPORTING BUGS\r\n\r\n       Use github <https://github.com/demarchidaniele/raspi_sensor_daemons/issues>\r\n\r\n\r\nCOPYRIGHT\r\n\r\n       Copyright    ©    2016    Daniele De Marchi     License   GPLv3+:   GNU   GPL   version   3   or   later\r\n       <http://gnu.org/licenses/gpl.html>.\r\n       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.\r\n\r\n\r\nSEE ALSO\r\n\r\n       Full documentation at: <https://github.com/demarchidaniele/raspi_sensor_daemons>\r\n\r\n-------------------------------\r\n\r\nreadAS3935 manpage\r\n\r\n\r\nNAME\r\n\r\n       readAS3935 - read values from AS3935 \r\n\r\n\r\nSYNOPSIS\r\n\r\n       readAS3935 - options\r\n\r\n\r\nDESCRIPTION\r\n\r\n       Read values from AS3935 sensor connected to Raspberry PI GPIO, and print information on screen in variuos formats. Also can start a background dameon for continuos reading. Daemon instance can be queried from the same executable with the -q parameter.\r\n       AS3935 must be connected using SPI interface and SPI_CE0 as enable.\r\n       During startup readAS3935 perform the proper tuning of antenna and intial noise floor level.\r\n       During execution readAS3935 perform a continuos adjust of noise floow up and down of the interrupt level.\r\n\r\n       Mandatory arguments to long options are mandatory for short options too.\r\n\r\n\t-v, --verbose\r\n\t\tGive detailed messages\r\n\r\n\t-w, --wait\r\n\t\tWait n second for events if not running as a daemon\r\n\r\n\t-d, --daemon\r\n\t\tStart daemon core\r\n\r\n\t-dk, --daemonkill\r\n\t\tKill dameon core\r\n\r\n\t-q, --query-daemon\r\n\t\tQuery the daemon\r\n\r\n\t-qcmd, --query-command\r\n\t\tQuery the command to the daemon\r\n\r\n\t-pj, --print-json\r\n\t\tPrint JSON output\r\n\r\n\t-?, --help\r\n\t\tShow usage information\r\n\r\nAUTHOR\r\n\r\n       Written by Daniele De Marchi.\r\n\r\n\r\nREPORTING BUGS\r\n\r\n       Use github <https://github.com/demarchidaniele/raspi_sensor_daemons/issues>\r\n\r\n\r\nCOPYRIGHT\r\n\r\n       Copyright    ©    2016    Daniele De Marchi     License   GPLv3+:   GNU   GPL   version   3   or   later\r\n       <http://gnu.org/licenses/gpl.html>.\r\n       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.\r\n\r\n\r\nSEE ALSO\r\n\r\n       Full documentation at: <https://github.com/demarchidaniele/raspi_sensor_daemons>\r\n\r\n-------------------------------\r\n\r\nreadBMP180 manpage\r\n\r\nNAME\r\n\r\n       readBMP180 - read values from BMP180 \r\n\r\n\r\nSYNOPSIS\r\n\r\n       readBMP180 - options\r\n\r\n\r\nDESCRIPTION\r\n\r\n       Read values from BMP180 sensor connected to Raspberry PI GPIO, and print information on screen in variuos formats. Also can start a background dameon for continuos reading. Daemon instance can be queried from the same executable with the -q parameter.\r\n       BMP180 must be connected using I2C interface.\r\n\r\n       Mandatory arguments to long options are mandatory for short options too.\r\n\r\n\t-v, --verbose\r\n\t\tGive detailed messages\r\n\r\n\t-r [0..10], --retry[0..10]\r\n\t\tRetry counter\r\n\r\n\t-d, --daemonize\r\n\t\tStart daemon with update cycle data refresh\r\n\r\n\t-uc [10..60], --update-cycle [10..60] \r\n\t\tSet update cycle (default 10)\r\n\r\n\t-s [1..255], --samples [1..64]\r\n\t\tSet average samples num(default 1)\r\n\r\n\t-q, --query-daemon\r\n\t\tQuery the daemon\r\n\r\n\t-pj, --print-json\r\n\t\tJSON output\r\n\r\n\t-?, --help\r\n\t\tShow usage information\r\n\r\n\r\nAUTHOR\r\n\r\n       Written by Daniele De Marchi.\r\n\r\n\r\nREPORTING BUGS\r\n\r\n       Use github <https://github.com/demarchidaniele/raspi_sensor_daemons/issues>\r\n\r\n\r\nCOPYRIGHT\r\n\r\n       Copyright    ©    2016    Daniele De Marchi     License   GPLv3+:   GNU   GPL   version   3   or   later\r\n       <http://gnu.org/licenses/gpl.html>.\r\n       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.\r\n\r\n\r\nSEE ALSO\r\n\r\n       Full documentation at: <https://github.com/demarchidaniele/raspi_sensor_daemons>\r\n\r\n-------------------------------\r\n\r\nreadTX23 manpage\r\n\r\nNAME\r\n\r\n       readTX23 - read values from LaCrosse TX23 Wind Sensor \r\n\r\n\r\nSYNOPSIS\r\n\r\n       readTX23 - options\r\n\r\n\r\nDESCRIPTION\r\n\r\n       Read values from LaCrosse TX23 sensor connected to Raspberry PI GPIO, and print information on screen in variuos formats. Also can start a background dameon for continuos reading. Daemon instance can be queried from the same executable with the -q parameter.\r\n       LaCrosse TX23 seems to suffer of bitrate instability that could cause reading errors.\r\n       This instability is avoided by the auto bitrate adapative algorithm.\r\n\r\n       Mandatory arguments to long options are mandatory for short options too.\r\n\r\n\t-v, --verbose\r\n\t\tGive detailed messages\r\n\r\n\t-gpio, --gpio\r\n\t\tSelect GPIO port (default 17)\r\n\r\n\t-r [0..10], --retry[0..10]\r\n\t\tRetry counter\r\n\r\n\t-d, --daemonize\r\n\t\tStart daemon with update cycle data refresh\r\n\r\n\t-uc [5..60], --update-cycle [5..60]\r\n\t\tSet update cycle (default 3)\r\n\r\n\t-s [1..64], --samples [1..64]\r\n\t\tSet samples (default 5)\r\n\r\n\t-d, --query-daemon\r\n\t\tQuery the daemon\r\n\r\n\t-psa, --print-sampling\r\n\t\tPrint sampling of input pin\r\n\r\n\t-psmax, --print-speedmax-only\r\n\t\tPrint wind speed max only\r\n\r\n\t-psmin, --print-speedmin-only\r\n\t\tPrint wind speed min only\r\n\r\n\t-psave,\t--print-speedave-only\r\n\t\tPrint wind speed average only\r\n\r\n\t-pd, --print-direction-only\r\n\t\tPrint wind direction only\r\n\r\n\t-pj, --print-json\r\n\t\tJSON output\r\n\r\n\t-ms, --speed_ms\r\n\t\tPrint speed in m/s\r\n\r\n\t-kmh, --speed_kmh\r\n\t\tPrint speed in Km/h\r\n\r\n\t-deg, --degrees\r\n\t\tPrint direction in degrees from north\r\n\r\n\t-dego [0..360],\t--degrees-offset [0..360]\r\n\t\tCorrect Offset degrees from north\r\n\r\n\t-?, --help\r\n\t\tShow usage information\r\n\r\n\r\nAUTHOR\r\n\r\n       Written by Daniele De Marchi.\r\n\r\n\r\nREPORTING BUGS\r\n\r\n       Use github <https://github.com/demarchidaniele/raspi_sensor_daemons/issues>\r\n\r\n\r\nCOPYRIGHT\r\n\r\n       Copyright    ©    2016    Daniele De Marchi     License   GPLv3+:   GNU   GPL   version   3   or   later\r\n       <http://gnu.org/licenses/gpl.html>.\r\n       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.\r\n\r\n\r\nSEE ALSO\r\n\r\n       Full documentation at: <https://github.com/demarchidaniele/raspi_sensor_daemons>\r\n       LaCrosse TX23 protocol descrition <https://www.john.geek.nz/2012/08/la-crosse-tx23u-anemometer-communication-protocol>\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}